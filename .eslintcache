[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/components/World.js":"4","/app/src/components/India.js":"5","/app/src/components/Header.js":"6","/app/src/components/State.js":"7","/app/src/components/Footer.js":"8"},{"size":500,"mtime":1609600121561,"results":"9","hashOfConfig":"10"},{"size":823,"mtime":1609673780468,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609240001598,"results":"12","hashOfConfig":"10"},{"size":1348,"mtime":1609673193580,"results":"13","hashOfConfig":"10"},{"size":2458,"mtime":1609673511518,"results":"14","hashOfConfig":"10"},{"size":725,"mtime":1609667336233,"results":"15","hashOfConfig":"10"},{"size":3458,"mtime":1609672772169,"results":"16","hashOfConfig":"10"},{"size":321,"mtime":1609674565125,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ssickg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/app/src/index.js",[],["37","38"],"/app/src/App.js",["39","40"],"/app/src/reportWebVitals.js",[],"/app/src/components/World.js",["41"],"import React, { Component} from 'react';\nimport axios from 'axios';\n\nclass World extends Component {\n  constructor(){\n    super();\n    this.state = {\n      data: []\n    }\n  }\n  componentDidMount(){ \n    axios.get(\"https://corona.lmao.ninja/v2/countries\").then(response=>{\n      this.setState({data: response.data});\n    });\n  }\n  render(){\n    return(\n      <div className=\"row\">\n      \n        <div className=\"col-md-12\">\n          <table className=\"table table-primary table-bordered table-striped\">\n            <thead>\n              <tr>\n                <td>Country</td>\n                <td>Total Cases</td>\n                <td>Recovered</td>\n                <td>Death</td>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.state.data.map((item,key)=>{\n                  return(\n                    <tr>\n                      <td>{item.country}\n                        <img style={ {width:'64px', marginLeft: '10px'} } src={item.countryInfo.flag}/>\n                      </td>\n                      <td>{item.cases}</td>\n                      <td>{item.recovered}</td>\n                      <td>{item.deaths}</td>\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default World;","/app/src/components/India.js",[],"/app/src/components/Header.js",[],"/app/src/components/State.js",["42","43"],"import React, { Component} from 'react';\nimport axios from 'axios';\nimport {Accordion, Card, Button} from 'react-bootstrap';\n\nclass State extends Component {\n  constructor(){\n    super();\n    this.state = {\n      statedata: {}\n    }\n  }\n\n  componentDidMount(){\n    axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response=>{\n      this.setState({statedata: response.data})\n    })\n  }\n  render(){\n    let states = Object.keys(this.state.statedata)\n    return(\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <Accordion defaultActiveKey=\"0\">\n            {\n              states.map((state,k)=>{\n                let districts = this.state.statedata[state].districtData;\n                let disctrict_keys = Object.keys(districts)\n\n                let total_active = 0;\n                let total_confirmed = 0;\n                let total_recovered = 0;\n                let total_deaths = 0;\n\n                let district_list = [];\n                for(let x in districts){\n                  total_active += districts[x].active;\n                  total_confirmed += districts[x].confirmed;\n                  total_recovered += districts[x].recovered;\n                  total_deaths += districts[x].deceased;\n                  let ob = districts[x];\n                  ob[\"district_name\"] = x;\n                  district_list.push(ob);\n                }\n                \n                return(\n                  <Card>\n                    <Card.Header>\n                      <Accordion.Toggle as={Button} variant=\"primary\" eventKey={k}>\n                        {state} - <span className=\"btn-dark p-1 mr-2\">Total Cases: {total_active}</span> <span className=\"btn-dark p-1 mr-2\">Active: {total_active}</span> <span className=\"btn-dark p-1 mr-2\">Recovered: {total_recovered}</span> <span className=\"btn-dark p-1 mr-2\">Deaths: {total_deaths}</span>  \n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey={k}>\n                      <Card.Body>\n                        <table className=\"table table-striped table-bordered\">\n                          <thead>\n                            <tr>\n                              <td>District</td>\n                              <td>Confirmed</td>\n                              <td>Active</td>\n                              <td>Recovered</td>\n                              <td>Death</td>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {\n                              district_list.map((itm,key)=>{\n                                return(\n                                  <tr>\n                                    <td>{itm.district_name}</td>\n                                    <td>{itm.confirmed}</td>\n                                    <td>{itm.active}</td>\n                                    <td>{itm.recovered}</td>\n                                    <td>{itm.deceased}</td>\n                                  </tr>\n                                )\n                              })\n                            }\n                          </tbody>\n                        </table>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                )\n              })\n            }\n          </Accordion>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default State;","/app/src/components/Footer.js",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":3,"nodeType":"51","messageId":"52","endLine":4,"endColumn":7},{"ruleId":"53","severity":1,"message":"54","line":15,"column":3,"nodeType":"55","messageId":"56","endLine":17,"endColumn":4},{"ruleId":"57","severity":1,"message":"58","line":36,"column":25,"nodeType":"59","endLine":36,"endColumn":104},{"ruleId":"49","severity":1,"message":"60","line":27,"column":21,"nodeType":"51","messageId":"52","endLine":27,"endColumn":35},{"ruleId":"49","severity":1,"message":"61","line":37,"column":19,"nodeType":"51","messageId":"52","endLine":37,"endColumn":34},{"ruleId":"49","severity":1,"message":"62","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":15},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'disctrict_keys' is assigned a value but never used.","'total_confirmed' is assigned a value but never used.","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation"]